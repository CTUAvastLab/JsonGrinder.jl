name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9' # Replace this with the minimum Julia version that your package supports.
          - '1' # Leave this line unchanged. '1' will automatically expand to the latest stable 1.x release of Julia.
        os:
           - ubuntu-latest
           - windows-latest
           - macos-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - name: Install dependencies
        run: julia --color=yes --project=./examples -e '
            using Pkg;
            Pkg.develop(PackageSpec(path=pwd()));
            Pkg.instantiate()'
      - run: julia --color=yes --project=./examples examples/make.jl
      - run: julia --color=yes --project=./examples examples/generated/recipes.jl
      - run: julia --color=yes --project=./examples examples/generated/mutagenesis.jl
      - run: julia --color=yes --project=./examples examples/generated/schema_examination.jl
      - run: julia --color=yes --project=./examples examples/generated/schema_visualization.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
